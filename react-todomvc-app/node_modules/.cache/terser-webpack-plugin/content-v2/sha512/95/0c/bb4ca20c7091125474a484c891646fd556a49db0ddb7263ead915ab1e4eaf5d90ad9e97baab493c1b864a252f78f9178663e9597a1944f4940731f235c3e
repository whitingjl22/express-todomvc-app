{"map":"{\"version\":3,\"sources\":[\"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/components/AddToDo.js\",\"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/components/ToDoList.js\",\"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/components/ToDoFooter.js\",\"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/container/ToDoPage.js\",\"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/App.js\",\"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/serviceWorker.js\",\"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/index.js\"],\"names\":[\"AddToDo\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"onChange\",\"id\",\"type\",\"placeholder\",\"onClick\",\"submit\",\"ToDoList\",\"listItems\",\"map\",\"item\",\"idx\",\"key\",\"name\",\"ToDoFooter\",\"concat\",\"itemsLeft\",\"filterFunction\",\"href\",\"ToDoPage\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"event\",\"setState\",\"defineProperty\",\"target\",\"value\",\"filter\",\"statusType\",\"filteredList\",\"state\",\"status\",\"DisplayList\",\"components_AddToDo\",\"components_ToDoList\",\"components_ToDoFooter\",\"React\",\"Component\",\"App\",\"container_ToDoPage\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from \\\"react\\\"\\n\\nconst AddToDo = (props) => {\\n  return (\\n    <div className=\\\"new-todo edit\\\">\\n      <input onChange={props.onChange} id=\\\"todo\\\" type=\\\"text\\\" placeholder=\\\"what needs to be done?\\\" />\\n      <button onClick={props.submit}>Add</button>\\n    </div>\\n  )\\n}\\n\\nexport default AddToDo\\n\",\"import React, { Component } from \\\"react\\\"\\n\\nconst ToDoList = (props) => {\\n  return (\\n    <div>\\n      <ul className=\\\"todo-list\\\">\\n        {props.listItems.map((item, idx) => {\\n          return (\\n            <li key={idx}>\\n              <label>{item.name}</label>\\n            </li>\\n          )\\n        })}\\n      </ul>\\n    </div>\\n  )\\n}\\n\\nexport default ToDoList\\n\",\"import React, { Component } from \\\"react\\\"\\n\\nconst ToDoFooter = (props) => {\\n  return (\\n    <div className=\\\"filters footer\\\">\\n      <label>{`${props.itemsLeft} item left`}</label>\\n      <ul>\\n        <li>\\n          <a onClick={() => props.filterFunction(\\\"All\\\")} href=\\\"#\\\">\\n            All\\n          </a>\\n        </li>\\n        <li>\\n          <a onClick={() => props.filterFunction(\\\"Active\\\")} href=\\\"#\\\">\\n            Active\\n          </a>\\n        </li>\\n        <li>\\n          <a onClick={() => props.filterFunction(\\\"Completed\\\")} href=\\\"#\\\">\\n            Completed\\n          </a>\\n        </li>\\n        <li>\\n          <a href=\\\"#\\\">Clear Completed</a>\\n        </li>\\n      </ul>\\n    </div>\\n  )\\n}\\n\\nexport default ToDoFooter\\n\",\"import React, { Component } from \\\"react\\\"\\nimport AddToDo from \\\"../components/AddToDo\\\"\\nimport ToDoList from \\\"../components/ToDoList\\\"\\nimport ToDoFooter from \\\"../components/ToDoFooter\\\"\\nimport Axios from \\\"axios\\\"\\n\\nclass ToDoPage extends React.Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      listItems: [\\n        {\\n          name: \\\"Homework\\\",\\n          status: \\\"Completed\\\"\\n        },\\n        {\\n          name: \\\"Dinner\\\",\\n          status: \\\"Active\\\"\\n        },\\n        {\\n          name: \\\"Coding in React\\\",\\n          status: \\\"\\\"\\n        }\\n      ],\\n      itemsLeft: 2,\\n      DisplayList: [\\n        {\\n          name: \\\"Homework\\\"\\n        },\\n        {\\n          name: \\\"Dinner\\\"\\n        },\\n        {\\n          name: \\\"Coding in React\\\"\\n        }\\n      ]\\n    }\\n  }\\n\\n  onChange = (event) => {\\n    this.setState({ [event.target.id]: event.target.value })\\n  }\\n\\n  submit = () => {}\\n\\n  filter = (statusType) => {\\n    let filteredList\\n\\n    if (statusType !== \\\"All\\\") {\\n      filteredList = this.state.listItems.filter((item) => item.status === statusType)\\n    } else filteredList = this.state.listItems\\n    this.setState({ DisplayList: filteredList })\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <h1>todos</h1>\\n        <AddToDo onChange={this.onChange} submit={this.submit} />\\n        <ToDoList listItems={this.state.DisplayList} />\\n        <ToDoFooter itemsLeft={this.state.itemsLeft} filterFunction={this.filter} />\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default ToDoPage\\n\",\"import React, { Component } from \\\"react\\\"\\nimport ToDoPage from \\\"./container/ToDoPage\\\"\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"todoapp\\\">\\n        <ToDoPage />\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default App\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from \\\"react\\\"\\nimport ReactDOM from \\\"react-dom\\\"\\nimport App from \\\"./App\\\"\\nimport * as serviceWorker from \\\"./serviceWorker\\\"\\nimport \\\"./index.css\\\"\\n\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"))\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister()\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,t,n){e.exports=n(43)},42:function(e,t,n){},43:function(e,t,n){\"use strict\";n.r(t);var a=n(0),l=n.n(a),i=n(14),r=n.n(i),o=n(2),c=n(3),s=n(5),u=n(4),m=n(6),f=n(15),d=function(e){return l.a.createElement(\"div\",{className:\"new-todo edit\"},l.a.createElement(\"input\",{onChange:e.onChange,id:\"todo\",type:\"text\",placeholder:\"what needs to be done?\"}),l.a.createElement(\"button\",{onClick:e.submit},\"Add\"))},h=function(e){return l.a.createElement(\"div\",null,l.a.createElement(\"ul\",{className:\"todo-list\"},e.listItems.map(function(e,t){return l.a.createElement(\"li\",{key:t},l.a.createElement(\"label\",null,e.name))})))},E=function(e){return l.a.createElement(\"div\",{className:\"filters footer\"},l.a.createElement(\"label\",null,\"\".concat(e.itemsLeft,\" item left\")),l.a.createElement(\"ul\",null,l.a.createElement(\"li\",null,l.a.createElement(\"a\",{onClick:function(){return e.filterFunction(\"All\")},href:\"#\"},\"All\")),l.a.createElement(\"li\",null,l.a.createElement(\"a\",{onClick:function(){return e.filterFunction(\"Active\")},href:\"#\"},\"Active\")),l.a.createElement(\"li\",null,l.a.createElement(\"a\",{onClick:function(){return e.filterFunction(\"Completed\")},href:\"#\"},\"Completed\")),l.a.createElement(\"li\",null,l.a.createElement(\"a\",{href:\"#\"},\"Clear Completed\"))))},p=(n(22),function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).onChange=function(e){n.setState(Object(f.a)({},e.target.id,e.target.value))},n.submit=function(){},n.filter=function(e){var t;t=\"All\"!==e?n.state.listItems.filter(function(t){return t.status===e}):n.state.listItems,n.setState({DisplayList:t})},n.state={listItems:[{name:\"Homework\",status:\"Completed\"},{name:\"Dinner\",status:\"Active\"},{name:\"Coding in React\",status:\"\"}],itemsLeft:2,DisplayList:[{name:\"Homework\"},{name:\"Dinner\"},{name:\"Coding in React\"}]},n}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",null,l.a.createElement(\"h1\",null,\"todos\"),l.a.createElement(d,{onChange:this.onChange,submit:this.submit}),l.a.createElement(h,{listItems:this.state.DisplayList}),l.a.createElement(E,{itemsLeft:this.state.itemsLeft,filterFunction:this.filter}))}}]),t}(l.a.Component)),b=function(e){function t(){return Object(o.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",{className:\"todoapp\"},l.a.createElement(p,null))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(42);r.a.render(l.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[16,1,2]]]);","extractedComments":[]}