{"ast":null,"code":"import _classCallCheck from \"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/container/ToDoPage.js\";\nimport React, { Component } from \"react\";\nimport AddToDo from \"../components/AddToDo\";\nimport ToDoList from \"../components/ToDoList\";\nimport ToDoFooter from \"../components/ToDoFooter\";\n\nvar ToDoPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToDoPage, _React$Component);\n\n  function ToDoPage(props) {\n    var _this;\n\n    _classCallCheck(this, ToDoPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoPage).call(this, props));\n\n    _this.filter = function (statusType) {\n      var filteredList;\n\n      if (statusType !== \"All\") {\n        filteredList = _this.state.listItems.filter(function (item) {\n          return item.status === statusType;\n        });\n      } else filteredList = _this.state.listItems;\n\n      _this.setState({\n        DisplayList: filteredList\n      });\n    };\n\n    _this.state = {\n      listItems: [{\n        name: \"Homework\",\n        status: \"Completed\"\n      }, {\n        name: \"Dinner\",\n        status: \"Active\"\n      }, {\n        name: \"Coding in React\",\n        status: \"\"\n      }],\n      itemsLeft: 2,\n      DisplayList: [{\n        name: \"Homework\"\n      }, {\n        name: \"Dinner\"\n      }, {\n        name: \"Coding in React\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ToDoPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"todos\"), React.createElement(AddToDo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ToDoList, {\n        listItems: this.state.DisplayList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(ToDoFooter, {\n        itemsLeft: this.state.itemsLeft,\n        filterFunction: this.filter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ToDoPage;\n}(React.Component);\n\nexport default ToDoPage;","map":{"version":3,"sources":["/Users/whi4062/Documents/Projects/react-bootcamp/projects/react-project-repos/react-todomvc-app/src/container/ToDoPage.js"],"names":["React","Component","AddToDo","ToDoList","ToDoFooter","ToDoPage","props","filter","statusType","filteredList","state","listItems","item","status","setState","DisplayList","name","itemsLeft"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAgCnBC,MAhCmB,GAgCV,UAACC,UAAD,EAAgB;AACvB,UAAIC,YAAJ;;AAEA,UAAID,UAAU,KAAK,KAAnB,EAA0B;AACxBC,QAAAA,YAAY,GAAG,MAAKC,KAAL,CAAWC,SAAX,CAAqBJ,MAArB,CACb,UAACK,IAAD;AAAA,iBAAUA,IAAI,CAACC,MAAL,KAAgBL,UAA1B;AAAA,SADa,CAAf;AAGD,OAJD,MAIOC,YAAY,GAAG,MAAKC,KAAL,CAAWC,SAA1B;;AACP,YAAKG,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEN;AAAf,OAAd;AACD,KAzCkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CACT;AACEK,QAAAA,IAAI,EAAE,UADR;AAEEH,QAAAA,MAAM,EAAE;AAFV,OADS,EAKT;AACEG,QAAAA,IAAI,EAAE,QADR;AAEEH,QAAAA,MAAM,EAAE;AAFV,OALS,EAST;AACEG,QAAAA,IAAI,EAAE,iBADR;AAEEH,QAAAA,MAAM,EAAE;AAFV,OATS,CADA;AAeXI,MAAAA,SAAS,EAAE,CAfA;AAgBXF,MAAAA,WAAW,EAAE,CACX;AACEC,QAAAA,IAAI,EAAE;AADR,OADW,EAIX;AACEA,QAAAA,IAAI,EAAE;AADR,OAJW,EAOX;AACEA,QAAAA,IAAI,EAAE;AADR,OAPW;AAhBF,KAAb;AAFiB;AA8BlB;;;;6BAaQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWK,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWO,SADxB;AAEE,QAAA,cAAc,EAAE,KAAKV,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAWD;;;;EAxDoBP,KAAK,CAACC,S;;AA2D7B,eAAeI,QAAf","sourcesContent":["import React, { Component } from \"react\"\nimport AddToDo from \"../components/AddToDo\"\nimport ToDoList from \"../components/ToDoList\"\nimport ToDoFooter from \"../components/ToDoFooter\"\n\nclass ToDoPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      listItems: [\n        {\n          name: \"Homework\",\n          status: \"Completed\"\n        },\n        {\n          name: \"Dinner\",\n          status: \"Active\"\n        },\n        {\n          name: \"Coding in React\",\n          status: \"\"\n        }\n      ],\n      itemsLeft: 2,\n      DisplayList: [\n        {\n          name: \"Homework\"\n        },\n        {\n          name: \"Dinner\"\n        },\n        {\n          name: \"Coding in React\"\n        }\n      ]\n    }\n  }\n\n  filter = (statusType) => {\n    let filteredList\n\n    if (statusType !== \"All\") {\n      filteredList = this.state.listItems.filter(\n        (item) => item.status === statusType\n      )\n    } else filteredList = this.state.listItems\n    this.setState({ DisplayList: filteredList })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>todos</h1>\n        <AddToDo />\n        <ToDoList listItems={this.state.DisplayList} />\n        <ToDoFooter\n          itemsLeft={this.state.itemsLeft}\n          filterFunction={this.filter}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ToDoPage\n"]},"metadata":{},"sourceType":"module"}